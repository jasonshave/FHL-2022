@page "/phoneNumbers"

@inherits FluxorComponent

@inject IState<PurchasedPhoneNumbersState> purchasedPhoneNumbersState

<MudBreadcrumbs Items="_items"/>
<MudContainer>
    <MudPaper class="pa-4">
        <MudText Typo="Typo.h4">Phone Numbers</MudText>
        <MudText>If your Azure Communication Service resource has phone numbers provisioned they will appear here.</MudText>
        
        @if (purchasedPhoneNumbersState.Value.Loading)
        {
            <MudProgressLinear Color="Color.Primary" Indeterminate="true" Class="my-7"/>
        }
        else
        {
            <MudGrid Class="pa-4">
                @foreach(PhoneNumberConfiguration phoneNumber in purchasedPhoneNumbersState.Value.PhoneNumberConfigurations)
                {
                    <MudItem xs="12">
                        <MudGrid>
                            <MudItem xs="6">
                                <MudText Typo="Typo.h5" Color="Color.Primary">@phoneNumber.PhoneNumber.Id</MudText>
                                <MudText Typo="Typo.body1">Country: @phoneNumber.PhoneNumber.CountryCode</MudText>
                                <MudText Typo="Typo.body2">Assignment type: @phoneNumber.PhoneNumber.AssignmentType</MudText>
                                <MudText Typo="Typo.body2">Calling capabilities: @phoneNumber.PhoneNumber.Capabilities.Calling</MudText>
                            </MudItem>
                            <MudItem xs="6">
                                <AutoAnswerButton PhoneNumber="phoneNumber.PhoneNumber"/>

                                <MudText>Test</MudText>
                            </MudItem>
                        </MudGrid>
                    </MudItem>
                }
            </MudGrid>
        }
    </MudPaper>
</MudContainer>

@code {
    readonly List<BreadcrumbItem> _items = new()
    {
        new BreadcrumbItem("Dashboard", href: "#"),
        new BreadcrumbItem("Phone Numbers", href: null, disabled: true)
    };

    bool loading;

    protected override async Task OnInitializedAsync()
    {

        await base.OnInitializedAsync();
    }

}