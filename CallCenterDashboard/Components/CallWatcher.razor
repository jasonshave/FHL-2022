@using JasonShave.Azure.Communication.Service.EventHandler.CallingServer
@using JasonShave.Azure.Communication.Service.EventHandler.Sdk.Common
@using CallingDashboard.Features.PurchasedPhoneNumbers
@using CallingDashboard.Features.UnansweredCalls
@using CallingDashboard.Models
@using CallingDashboard.Features.CallingServer

@inherits FluxorComponent

@inject IDispatcher dispatcher
@inject ICallingServerEventSubscriber callingServerEventSubscriber

@code {
    protected override void OnInitialized()
    {
        SubscribeToAction<PurchasedPhoneNumbersSetAnswerModeAction>(p => UpdateEventHandling(p.PhoneNumberConfiguration));
        base.OnInitialized();
    }

    void UpdateEventHandling(PhoneNumberConfiguration number)
    {
        callingServerEventSubscriber.OnIncomingCall += (e, c) =>
        {
            if (e.To.PhoneNumber.Value == number.PhoneNumber.PhoneNumber)
            {
                if (number.AutoAnswer)
                {
                    dispatcher.Dispatch(new CallingServerAnswerAction(new UnansweredCall(e, c, DateTimeOffset.UtcNow)));
                }
                else
                {
                    dispatcher.Dispatch(new UnansweredCallsAddAction(new UnansweredCall(e, c, DateTimeOffset.UtcNow)));
                }
            }

            return ValueTask.CompletedTask;
        };
    }
}
