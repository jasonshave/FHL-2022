@using CallCenterDashboard.Features.ActiveCalls
@inject IDispatcher dispatcher
@inject IState<ActiveCallsState> activeCallState

<MudTable Items="@activeCallState.Value.CallData" Hover="true" Breakpoint="Breakpoint.Sm" T="CallData">
    <HeaderContent>
        <MudTh>From</MudTh>
        <MudTh>To</MudTh>
        <MudTh>Call Duration</MudTh>
        <MudTh>Connection ID</MudTh>
        <MudTh>Correlation ID</MudTh>
        <MudTh>Hang up</MudTh>
        <MudTh>Terminate</MudTh>
        <MudTh>Add</MudTh>
        <MudTh>Remove</MudTh>
    </HeaderContent>
    <RowTemplate>
        <MudTd DataLabel="From">@context.From</MudTd>
        <MudTd DataLabel="To">@context.To</MudTd>
        <MudTd DataLabel="Call Duration">@context.CallStartTime</MudTd>
        <MudTd DataLabel="Connection ID">@context.CallConnectionId</MudTd>
        <MudTd DataLabel="Correlation ID">@context.CorrelationId</MudTd>
        <MudTd>
            <HangUpButton CallData="context"/>
        </MudTd>
        <MudTd>
            <TerminateButton CallData="context"/>
        </MudTd>
        <MudTd>
            <AddParticipantButton CallData="context"/>
        </MudTd>
        <MudTd>
            <RemoveParticipantButton CallData="context"/>
        </MudTd>
    </RowTemplate>
</MudTable>

@code {
    protected override void OnInitialized()
    {
        if(!activeCallState.Value.Initialized) dispatcher.Dispatch(new ActiveCallsInitializeAction());
        base.OnInitialized();
    }
}
