@using CallCenterDashboard.Models
@using Azure.Communication.CallingServer
@using Azure.Communication
@using CallCenterDashboard.Features.CallDetails
@using CallCenterDashboard.Misc
@using Microsoft.AspNetCore.Components.Rendering;

@inherits FluxorComponent
@inject IDispatcher dispatcher
@inject IState<CallDetailsState> callDetailState

@page "/CallDetail/{id:string}"
<CallData CallProperties="@callProperties" />
<ParticipantTable Participants="@participants" />


@code {
    [Parameter]
    public string Id { get; set; }
    private CallConnectionProperties? callProperties;
    private IEnumerable<CallParticipant>? participants;
    protected override void OnInitialized()
    {
        callDetailState.Value.IsUpToDateList.TryGetValue(Id, out var isUpToDate);

        if (isUpToDate == null)
        {
            dispatcher.Dispatch(new InitializeCallDetailAction(Id));
        }

        else if (isUpToDate == false)
        {
            dispatcher.Dispatch(new UpdateParticipantsAction(Id));
        }

        base.OnInitialized();
    }

    protected override bool ShouldRender()
    {

        bool shouldRender =  base.ShouldRender();
        if (shouldRender)
        {
            callDetailState.Value.CallConnectionPropertiesList.TryGetValue(Id, out callProperties);
            callDetailState.Value.ParticipantsList.TryGetValue(Id, out participants);
        }
        return shouldRender;
    }
}
