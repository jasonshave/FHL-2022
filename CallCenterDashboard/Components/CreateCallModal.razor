@using Azure.Communication
@using CallCenterDashboard.Tools

@inherits FluxorComponent
@inject IState<ApplicationIdentityState> applicationIdentityState
@inject IState<PurchasedPhoneNumbersState> purchasedPhoneNumbersState
@inject NavigationManager NavigationManager

<EditForm Model="formData" OnValidSubmit="OnValidSubmit">
    <DataAnnotationsValidator/>
    <MudDialog>
        <TitleContent>
            <MudText Typo="Typo.h6">@ContentText</MudText>
        </TitleContent>
        <DialogContent>
            <MudContainer Style="width: 500px">
                <MudText>From: @applicationName</MudText>
                <MudTextField @bind-Value="target" Label="Target identity" Variant="Variant.Text" HelperText="Example: ACS MRI, Phone Number, Teams User"/>
                <MudButton Color="Color.Primary" OnClick="AddTarget">Add Target</MudButton>
                
                <MudText>Targets:</MudText>
                <MudList Clickable="true">
                    @foreach (var item in formData.Targets)
                    {
                        <MudListItem OnClick="() => RemoveTarget(item)" IconColor="Color.Success" Icon="@Icons.Material.Filled.Check" Text="@item.RawId"/>
                        <MudDivider/>
                    }
                </MudList>
                @if (alternateIdSelected)
                {
                    <MudSelect T="string" @bind-Value="alternateCallerId" Label="Alternate caller ID number" SelectedValuesChanged="() => ReceiveAlternateCallerIdValue(target)">
                        @foreach (var configuration in purchasedPhoneNumbersState.Value.PhoneNumberConfigurations)
                        {
                            <MudSelectItem Value="configuration.PhoneNumber.PhoneNumber">@configuration.PhoneNumber.PhoneNumber</MudSelectItem>
                        }
                    </MudSelect>
                }
            </MudContainer>
        </DialogContent>
        <DialogActions>
            <MudButton OnClick="Cancel">Cancel</MudButton>
            <MudButton ButtonType="ButtonType.Submit" Color="@Color" Variant="Variant.Filled">@ButtonText</MudButton>
        </DialogActions>
    </MudDialog>
</EditForm>

@code {
    [CascadingParameter] MudDialogInstance? MudDialog { get; set; }

    [Inject] private IDialogService DialogService { get; set; }

    [Parameter] public string ContentText { get; set; } = string.Empty;

    [Parameter] public string ButtonText { get; set; } = string.Empty;
    
    [Parameter] public Color Color { get; set; }

    CommunicationIdentifier? sourceId;
    readonly CreateCallFormData formData = new();
    string applicationName => applicationIdentityState.Value.ApplicationName;
    string target = string.Empty;
    string alternateCallerId = string.Empty;
    bool alternateIdSelected;
    
    protected override async Task OnInitializedAsync()
    {
        sourceId = applicationIdentityState.Value.Id;

        if (applicationIdentityState.Value.ApplicationName is null)
        {
            var result = await DialogService.ShowMessageBox("Application identity not set.", "You must set the application's identity to make outbound calls.", yesText: "OK", null, null, new DialogOptions()
            {
                CloseButton = true
            });

            NavigationManager.NavigateTo("identity");
            return;
        }

        formData.Source = applicationIdentityState.Value.Id.RawId;
        StateHasChanged();
        
        await base.OnInitializedAsync();
    }

    void ReceiveAlternateCallerIdValue(string value)
    {

    }

    void AddTarget()
    {
        if (string.IsNullOrWhiteSpace(target)) return;
        
        var acsTarget = target.ToCommunicationIdentifier();
        formData.Targets.Add(acsTarget);
        CheckTargets();
        target = string.Empty;
    }

    void RemoveTarget(CommunicationIdentifier target)
    {
        formData.Targets.Remove(target);
        CheckTargets();
    }

    void CheckTargets()
    {
        alternateIdSelected = formData.Targets.Any(x => x is PhoneNumberIdentifier);
    }
    
    void OnValidSubmit(EditContext context)
    {
        formData.AlternateCallerId = !alternateIdSelected 
            ? null 
            : new PhoneNumberIdentifier(alternateCallerId);
        MudDialog?.Close(DialogResult.Ok(formData));
    }

    void Cancel() => MudDialog?.Cancel();
}